{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Charlotte's Course Notes","text":"<p>Hello, this is my home page where I will be organizing and sharing course notes for COMP 423.</p>"},{"location":"tutorials/rust-setup/","title":"Setting up a Dev Container for Rust","text":"<ul> <li>Primary author: Charlotte Tsui</li> </ul>"},{"location":"tutorials/rust-setup/#prerequisites","title":"Prerequisites","text":"<p>Please make sure you have the following before continuing</p> <ul> <li>Git</li> <li>Visual Studio Code</li> <li>Docker</li> </ul>"},{"location":"tutorials/rust-setup/#step-1-create-a-blank-directory-and-initialize-git","title":"Step 1: Create a Blank Directory and Initialize Git","text":"<ol> <li>Open your terminal and create a new directory for your project.</li> </ol> <p><pre><code>mkdir comp423-rust-setup \ncd comp423-rust-setup\n</code></pre> 2. Initialize a new Git repository.</p> <pre><code>git init\n</code></pre>"},{"location":"tutorials/rust-setup/#step-2-development-container-configuration","title":"Step 2: Development Container Configuration","text":"<ol> <li>In VS Code, open the newly created <code>comp423-rust-setup</code> directory</li> <li>Inside the project, create a new <code>.devcontainer</code> directory in the root of your project history with the following file inside of this \"hidden\" configuraiton directory: <code>.devcontainer/devcontainer.json</code></li> <li>Open <code>devcontainer.json</code> and configure the development environment and shown below: <pre><code>{\n  \"name\": \"Rust Setup\",\n  \"image\": \"mcr.microsoft.com/vscode/devcontainers/rust:1\",\n  \"customizations\": {\n    \"vscode\": {\n      \"settings\": {},\n      \"extensions\": [\"rust-lang.rust-analyzer\", \"matklad.rust-analyzer\" ],\n      \"postCreateCommand\": \"rustup update &amp;&amp; ruste --version\"\n    }\n  } \n}\n</code></pre></li> </ol> <p>Info</p> <p>In the Rust development environment, all tools are installed to the\u00a0~/.cargo/bin\u00a0directory, and this is where you will find the Rust toolchain, including\u00a0rustc,\u00a0cargo, and\u00a0rustup.</p>"},{"location":"tutorials/rust-setup/#step-3-reopen-in-dev-container","title":"Step 3: Reopen in Dev Container","text":"<p>Reopen the project in your dev container by pressing <code>Ctrl+Shift+P</code> or <code>Cmd+Shift+P</code> on Mac. Type in \"Dev Containers: Reopen in Container\" and wait for your container setup to complete.</p>"},{"location":"tutorials/rust-setup/#step-4-create-a-new-rust-project","title":"Step 4: Create a new Rust Project","text":"<ol> <li>In a new terminal, type the following: <pre><code>cargo new hello_comp423\n</code></pre></li> <li>Navigate to your project directory. <pre><code>cd hello_comp423\n</code></pre></li> <li>Write your simple program! <pre><code>fn main() {\n    println!(\"Hello, COMP423!\");\n}\n</code></pre></li> </ol>"},{"location":"tutorials/rust-setup/#step-5-build-and-run-your-project","title":"Step 5: Build and Run your Project","text":"<ol> <li>Build your project using Cargo. Open a new VS Code terminal and type: <pre><code>cargo build\n</code></pre></li> <li>Run your project using Cargo <pre><code>cargo run\n</code></pre></li> </ol>"},{"location":"tutorials/rust-setup/#expected-output","title":"Expected output","text":"<pre><code>Hello COMP423!\n</code></pre>"}]}